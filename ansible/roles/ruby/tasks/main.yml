---
- name: Install Ruby Dependencies
  apt: name={{ item }} state=latest update_cache=yes
  with_items:
    - autoconf
    - bison
    - build-essential
    - libssl-dev
    - libyaml-dev
    - libreadline6-dev
    - zlib1g-dev
    - libncurses5-dev
    - libffi-dev
    - libgdbm3
    - libgdbm-dev
    # - git-core
    # - curl
    # - zlib1g-dev
    # - build-essential
    # - libssl-dev
    # - libreadline-dev
    # - libyaml-dev
    # - libsqlite3-dev
    # - sqlite3
    # - libxml2-dev
    # - libxslt1-dev
    # - libcurl4-openssl-dev
    # - python-software-properties
    # - libffi-dev

- name: Clone RBEnv Git Repository
  git: repo=https://github.com/rbenv/rbenv.git
       dest={{ rbenv_path }}
       version={{ rbenv_version }}
       accept_hostkey=yes
       force=yes

- name: Clone Ruby Build Git Repository
  git: repo=https://github.com/rbenv/ruby-build.git
       dest={{ ruby_build_path }}
       version={{ ruby_build_version }}
       accept_hostkey=yes
       force=yes

- name: Set RbEnv Directory Permissions
  file: path={{ rbenv_path }} owner={{ user_account }} group={{ user_account }} mode=0774

- name: Copy RBEnv Configuration
  template: src=.rbenvrc.j2 dest=/home/{{ user_account }}/.rbenvrc owner={{ user_account }} group={{ user_account }} mode=0744

- name: Update Bash Profile
  lineinfile: dest=/home/{{ user_account }}/.bash_profile
              regexp='^source .rbenvrc'
              line='source .rbenvrc'
              insertafter='EOF'

- name: Check Ruby Installed
  shell: sudo -iu {{ user_account }} rbenv versions | grep {{ ruby_version }}
  register: ruby_installed
  ignore_errors: yes

- name: Install Ruby {{ ruby_version }}
  shell: sudo -iu {{ user_account }} rbenv install {{ ruby_version }}
  when: ruby_installed|failed

- name: Set Ruby Global version
  shell: sudo -iu {{ user_account }} rbenv global {{ ruby_version }}
  when: ruby_installed|failed

- name: Update Ruby Shims
  shell: sudo -iu {{ user_account }} rbenv rehash
  when: ruby_installed|failed

- name: Copy Ruby Gems Configuration
  copy: src=.gemrc dest=/home/{{ user_account }}/.gemrc owner={{ user_account }} group={{ user_account }} mode=0744

- name: Install Bundler
  shell: gem install bundler
